csv {
	delimiter ";"
	charset   "ISO-8859-1"
	header "dataGeracao;horaGeracao;anoEleicao;numTurno;descricaoEleicao;siglaUF;siglaUE;codigoMunicipio;nomeMunicipio;numeroZona;codigoCargo;numeroCand;sqCandidato;nomeCandidato;nomeUrnaCandidato;descricaoCargo;codSitCandSuperior;descSitCandSuperior;codigoSitCandidato;descSitCandidato;codigoSitCandTot;descSitCandTot;numeroPartido;siglaPartido;nomePartido;sequencialLegenda;nomeColigacao;composicaoLegenda;totalVotos;transito"
	null "#NULO#"
}


defineType csv.codigoMunicipio, integer
defineType csv.numeroZona, integer
defineType csv.sqCandidato, integer
defineType csv.totalVotos, integer
defineType csv.numeroCand, integer

defineType csv.nomeMunicipio, string
defineType csv.nomeCandidato, string
defineType csv.nomeUrnaCandidato, string


definePrefix pol, 	"http://purl.org/onto/politics#"
definePrefix prop,	"http://dbpedia.org/property/"
definePrefix dbr,	"http://dbpedia.org/resource/"
definePrefix dbo,	"http://dbpedia.org/ontology/"
definePrefix foaf,	"http://xmlns.com/foaf/0.1/"
definePrefix wd,	"http://www.wikidata.org/entity/"

uriBase "http://purl.org/politics/id/"

uri stateURI,				"state",			csv.'siglaUF'
uri municipalityURI,		"municipality",		csv.'codigoMunicipio'
uri electionURI,			csv.'anoEleicao',	"election"
uri turnURI, 				csv.'anoEleicao',	"turn",					csv.'numTurno'
uri candidacyURI, 			csv.'anoEleicao',	csv.'siglaUF',			"candidacy",			csv.'sqCandidato'
uri electoralDistrictURI,	csv.'anoEleicao',	"electoralDistrict",	csv.'codigoMunicipio',	csv.'numeroZona'
uri districtVotingURI,		csv.'anoEleicao',	"districtVoting",		csv.'codigoMunicipio',	csv.'numeroZona',	csv.'sqCandidato'


// Candidacy (Candidatura)
matching(candidacyLOD) {
    endpoint   "http://purl.org/politics/triplestore/Politics"
    vendor      VIRTUOSO
    search      csv.sqCandidato
    defaultURI  candidacyURI
	type        pol.candidacy
}

map (candidacy, candidacyLOD) {
	pol.situation			csv.descSitCandTot //Diz se foi pro 2 turno ou não e se foi eleito
}


// Turn (Turno)
matching(turnLOD) {
	endpoint	"http://java.icmc.usp.br:2472/repositories/Politics"
	vendor		VIRTUOSO
	search		csv.numTurno
	type		pol.turn
	defaultURI	turnURI
}

map(turn, turnLOD) {
//
}


// Election (Eleição)
matching(electionLOD) {
    endpoint    "http://java.icmc.usp.br:2472/repositories/Politics"
    vendor      VIRTUOSO
    search      csv.descricaoEleicao
    type       	pol.election
    defaultURI  electionURI
}

map(election, electionLOD) {
//
}


// State (Estado)
matching(stateLOD) {
	endpoint	"http://java.icmc.usp.br:2472/repositories/Politics"
	vendor		VIRTUOSO
	search		csv.siglaUF
	type		pol.state
	defaultURI	stateURI
}

map(state, stateLOD) {
	rdfs.label			csv.siglaUF
	pol.abbreviation	csv.siglaUF
	rdf.type			pol.state
	// Coutry, adicionar em alguma planilha que apareça wd.P17
}


// Municipality (Município)
matching(municipalityLOD) {
	endpoint	"http://java.icmc.usp.br:2472/repositories/Politics"
	vendor		VIRTUOSO
	search		csv.nomeMunicipio
	type		pol.municipality
	defaultURI	municipalityURI
}

map(municipality, municipalityLOD) {
	pol.state				state
	rdfs.label				csv.nomeMunicipio
	pol.tseCode				csv.codigoMunicipio
	rdf.type				pol.municipality
}


// Electoral District (Distrito Eleitoral)
matching(electoralDistrictLOD) {
	endpoint	"http://java.icmc.usp.br:2472/repositories/Politics"
	vendor		VIRTUOSO
	search		csv.numeroZona
	type		pol.electoralDistrict
	defaultURI	electoralDistrictURI
}

map(electoralDistrict, electoralDistrictLOD) {
	pol.turn			turn
	pol.election		election
	pol.municipality	municipality
	pol.number			csv.numeroZona
	rdf.type			pol.electoralDistrict
}


// District Voting (Votação na Zona Eleitoral)
matching(districtVotingLOD) {
	endpoint	""
	vendor		VIRTUOSO
	search		csv.nomeCandidato
	type		pol.districtVoting
	defaultURI	districtVotingURI
}

map(districtVoting, districtVotingLOD) {
	rdfs.label				csv.nomeUrnaCandidato
	pol.electoralDistrict	electoralDistrict
	pol.candidacy			candidacy
	pol.turn				turn
	pol.votes				csv.totalVotos
	rdf.type				pol.districtVoting
}
